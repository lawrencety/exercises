####Exercises

> What is the main difference between a stack and a queue?

A: A stack operates as LIFO (last in first out) and queue uses FIFO (first in first out)

> What are the similarities between stacks and queues?

A: They are both a way to store tasks and prioritize the order in which to execute them.

> Imagine you are an engineer tasked with implementing the UNDO and REDO options in a word processor such as Microsoft Word. Which data structure would you use for each option and why?

A: These functions would leverage the stack (LIFO) because UNDO and REDO functions typically act upon the task that was last performed.

####Programming Questions

You may program the following question in any language of your choice. Before you begin coding, write out a plan as to how you will solve the question.

> Given a string, reverse it using a stack. For example, the string "Bloc!" should be converted to "!colB".

A:
Pseudocode -
CREATE FUNCTION with WORD as argument
  INITIALIZE a RESULT
  FOR each character in WORD
    Take the LAST character in WORD and append the last letter to RESULT
  END For
  Return RESULT
end

function reverseString(word) {
  let result = '';
  for (let i = word.length-1, i >= 0, i--) {
    result = result.concat(word[i]);
  }
  return result;
}

> Implement the pop method of a stack using one queue. Make a FIFO data structure mirror the functionality of a LIFO data structure. Since the internal list is not the same as defined in the checkpoint, it may help to rewrite the pseudocode first.

A:
Pseudocode -
CREATE FUNCTION with queue as argument
  INITIALIZE a RESULT
  FOR each element in queue except last one
    Remove the first element from queue and append to RESULT
  END FOR
  RETURN RESULT
END

function popStack(queue) {
  let result = [];
  for (let i = 0, i < (queue.length - 1), i++) {
    result = result.concat(queue[0]);
    queue.shift();
  }
  return result;
}

> To delete an item, take all of the elements in the queue one at a time and put them at the end of the queue, except for the last one which should be removed and returned.

A:
Pseudocode -
CREATE FUNCTION with queue as argument
  FOR each element in queue
    IF element is last one
      Remove element
    ELSE
      Remove the first element from queue and append to queue
    END
  END FOR
  RETURN queue
END

function deleteQueue(queue) {
  for (let i = 0, i < queue.length, i++) {
    if (i == (queue.length - 1)) {
      queue.shift();
    } else {
      queue.push(queue[0]);
      queue.shift();
    }
  }
  return queue;
}

> Implement the enqueue and dequeue methods defined in the checkpoint inside your own Queue class.

FUNCTION enqueue(element)
  APPEND element to the end of the list
END FUNCTION

A:
var serverQueue = [];

function enqueue(element) {
  serverQueue.push(element);
}

FUNCTION dequeue
  SET temp to the first element
  REMOVE FIRST element of list from list
  RETURN temp
END FUNCTION

A:
function dequeue() {
  let temp = serverQueue[0];
  serverQueue.shift();
  return temp;
}
